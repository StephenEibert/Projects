This program is meant to duplicate a playlist similar to what you may find in your iTunes library. It is designed using object oriented concepts and incorporates data structures such a a linear linked list and a binary search tree.
The base class is the class scan, which allows use of the scanner function in every other class without it having to be implemented in each. The scan class also includes the function 'again', implemented with a while loop allowing the user to input until they wish to be done. Other than the basic scan class, the artist class may be defined as the true base class for the entire program. It includes variables for the artist name and genre, as well as memory for each of his or her songs. The song class is derived from the artist class using simple inheritance and allowing memory to be shared between the hierarchy. The song class has memory for the title of a song, the album its from, and the year it was released. Each of these classes has functions for adding, searching, and displaying. The node class and BSTNode class are both also derived from artist, this allows for a linked list (via the node class) to function as a playlist of songs from a particular artist or many artists. the 'library' of music, if you will, is using a binary search tree as the data structure, and is implemented in the collection of classes. This class is using the BSTNode class and operations such as get/set left and right reference, and get/set data. It is traversed recursively for the search function, display function, and add function. The playlist class (using a linear linked list) is traversed iteratively with simple while loops and a current reference.
